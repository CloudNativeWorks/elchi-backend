name: Deploy to Demo

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set unique tags
        id: vars
        run: echo "TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Fill config-prod.yaml with environment variables
        run: |
          export ELCHI_ADDRESS=${{ vars.ELCHI_ADDRESS }}
          export ELCHI_PORT=${{ vars.ELCHI_PORT }}
          export ELCHI_TLS_ENABLED=${{ vars.ELCHI_TLS_ENABLED }}
          export ELCHI_GRPC_NODE_COUNT=1
          export ELCHI_REST_NODE_COUNT=1
          export ELCHI_ENABLE_DEMO=${{ vars.ELCHI_ENABLE_DEMO }}
          export MONGODB_HOSTS=${{ vars.MONGODB_HOSTS }}
          export MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}
          export MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}
          export MONGODB_DATABASE=${{ secrets.MONGODB_DATABASE }}
          export MONGODB_SCHEME=${{ vars.MONGODB_SCHEME }}
          export MONGODB_PORT=${{ vars.MONGODB_PORT }}
          export MONGODB_REPLICASET=${{ vars.MONGODB_REPLICASET }}
          export MONGODB_TIMEOUTSECONDS=${{ vars.MONGODB_TIMEOUTSECONDS }}
          export MONGODB_TLS_ENABLED=${{ vars.MONGODB_TLS_ENABLED }}
          export LOG_LEVEL=${{ vars.LOG_LEVEL }}
          export LOG_FORMATTER=${{ vars.LOG_FORMATTER }}
          export LOG_REPORTCALLER=${{ vars.LOG_REPORTCALLER }}
          export SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
          
          envsubst < .configs/config-prod.yaml > .configs/config-prod.yaml.filled
          mv .configs/config-prod.yaml.filled .configs/config-prod.yaml

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DO_DEPLOY_KEY }}

      - name: Add known_hosts
        run: |
          ssh-keyscan -H 68.183.216.216 >> ~/.ssh/known_hosts

      - name: Copy config file to server
        run: |
          ssh root@68.183.216.216 "mkdir -p /root/.configs"
          scp .configs/config-prod.yaml root@68.183.216.216:/root/.configs/config-prod.yaml

      - name: Docker login on server
        run: |
          echo '${{ secrets.DOCKER_PASSWORD }}' | base64 | ssh root@68.183.216.216 "base64 -d | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin"

      - name: Deploy Envoy 1.32.3 containers on DigitalOcean
        run: |
          ssh root@68.183.216.216 "\
            docker pull jhonbrownn/elchi-backend:v0.1.0-v0.13.4-envoy1.32.3 && \
            docker stop elchi-control-plane-container-v1_32_3 || true && \
            docker rm elchi-control-plane-container-v1_32_3 || true && \
            docker stop elchi-controller-container-v1_32_3 || true && \
            docker rm elchi-controller-container-v1_32_3 || true && \
            docker run --pull always -d -p 18000:18000 -v /root/.configs/config-prod.yaml:/root/.configs/config-prod.yaml --name elchi-control-plane-container-v1_32_3 jhonbrownn/elchi-backend:v0.1.0-v0.13.4-envoy1.32.3 elchi-control-plane && \
            docker run --pull always -d -p 8099:8099 -v /root/.configs/config-prod.yaml:/root/.configs/config-prod.yaml --name elchi-controller-container-v1_32_3 jhonbrownn/elchi-backend:v0.1.0-v0.13.4-envoy1.32.3 elchi-controller"

      - name: Deploy Envoy 1.33.2 containers on DigitalOcean
        run: |
          ssh root@68.183.216.216 "\
            docker pull jhonbrownn/elchi-backend:v0.1.0-v0.13.4-envoy1.33.2 && \
            docker stop elchi-control-plane-container-v1_33_2 || true && \
            docker rm elchi-control-plane-container-v1_33_2 || true && \
            docker stop elchi-controller-container-v1_33_2 || true && \
            docker rm elchi-controller-container-v1_33_2 || true && \
            docker run --pull always -d -p 18001:18000 -v /root/.configs/config-prod.yaml:/root/.configs/config-prod.yaml --name elchi-control-plane-container-v1_33_2 jhonbrownn/elchi-backend:v0.1.0-v0.13.4-envoy1.33.2 elchi-control-plane && \
            docker run --pull always -d -p 8199:8099 -v /root/.configs/config-prod.yaml:/root/.configs/config-prod.yaml --name elchi-controller-container-v1_33_2 jhonbrownn/elchi-backend:v0.1.0-v0.13.4-envoy1.33.2 elchi-controller"
